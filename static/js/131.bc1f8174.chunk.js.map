{"version":3,"file":"static/js/131.bc1f8174.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/construct.js","../node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","../node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","../node_modules/engine.io-parser/build/esm/commons.js","../node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","../node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../node_modules/engine.io-parser/build/esm/index.js","../node_modules/@socket.io/component-emitter/index.mjs","../node_modules/engine.io-client/build/esm/globalThis.browser.js","../node_modules/engine.io-client/build/esm/util.js","../node_modules/engine.io-client/build/esm/transport.js","../node_modules/engine.io-client/build/esm/contrib/yeast.js","../node_modules/engine.io-client/build/esm/contrib/parseqs.js","../node_modules/engine.io-client/build/esm/contrib/has-cors.js","../node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","../node_modules/engine.io-client/build/esm/transports/polling.js","../node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","../node_modules/engine.io-client/build/esm/transports/websocket.js","../node_modules/engine.io-client/build/esm/transports/index.js","../node_modules/engine.io-client/build/esm/contrib/parseuri.js","../node_modules/engine.io-client/build/esm/socket.js","../node_modules/engine.io-client/build/esm/index.js","../node_modules/socket.io-parser/build/esm/is-binary.js","../node_modules/socket.io-parser/build/esm/binary.js","../node_modules/socket.io-parser/build/esm/index.js","../node_modules/socket.io-client/build/esm/on.js","../node_modules/socket.io-client/build/esm/socket.js","../node_modules/socket.io-client/build/esm/contrib/backo2.js","../node_modules/socket.io-client/build/esm/manager.js","../node_modules/socket.io-client/build/esm/index.js","../node_modules/socket.io-client/build/esm/url.js"],"sourcesContent":["export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return possibleConstructorReturn(this, result);\n  };\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct.bind();\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n  return _construct.apply(null, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeFunction from \"./isNativeFunction.js\";\nimport construct from \"./construct.js\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n      _cache.set(Class, Wrapper);\n    }\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nexport default encodePacket;\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\nexport default decodePacket;\n","import encodePacket from \"./encodePacket.js\";\nimport decodePacket from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nclass TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n}\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { XHR as XMLHttpRequest } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false,\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n            this.xs = opts.secure !== isSSL;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        let port = \"\";\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n                (\"http\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.async = false !== opts.async;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    create() {\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, this.async);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket, } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @param {Object} opts - connection options\n     * @protected\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        let port = \"\";\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @private\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nexport const transports = {\n    websocket: WS,\n    polling: Polling,\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts = {}) {\n        super();\n        this.writeBuffer = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\"polling\", \"websocket\"];\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this.beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        });\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", (reason) => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n","import { Socket } from \"./socket.js\";\nexport { Socket };\nexport const protocol = Socket.protocol;\nexport { Transport } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\nexport { parse } from \"./contrib/parseuri.js\";\nexport { nextTick } from \"./transports/websocket-constructor.js\";\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                return this.encodeAsBinary({\n                    type: obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK,\n                    nsp: obj.nsp,\n                    data: obj.data,\n                    id: obj.id,\n                });\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\n            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\n                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return typeof payload === \"object\";\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || typeof payload === \"object\";\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return Array.isArray(payload) && payload.length > 0;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n            this.reconstructor = null;\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\n         * be transmitted by the server.\n         */\n        this.recovered = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        /**\n         * The queue of packets to be sent with retry in case of failure.\n         *\n         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.\n         * @private\n         */\n        this._queue = [];\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        this._opts = Object.assign({}, opts);\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {\n            this._addToQueue(args);\n            return this;\n        }\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        var _a;\n        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Emits an event and waits for an acknowledgement\n     *\n     * @example\n     * // without timeout\n     * const response = await socket.emitWithAck(\"hello\", \"world\");\n     *\n     * // with a specific timeout\n     * try {\n     *   const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\n     * } catch (err) {\n     *   // the server did not acknowledge the event in the given delay\n     * }\n     *\n     * @return a Promise that will be fulfilled when the server acknowledges the event\n     */\n    emitWithAck(ev, ...args) {\n        // the timeout flag is optional\n        const withErr = this.flags.timeout !== undefined || this._opts.ackTimeout !== undefined;\n        return new Promise((resolve, reject) => {\n            args.push((arg1, arg2) => {\n                if (withErr) {\n                    return arg1 ? reject(arg1) : resolve(arg2);\n                }\n                else {\n                    return resolve(arg1);\n                }\n            });\n            this.emit(ev, ...args);\n        });\n    }\n    /**\n     * Add the packet to the queue.\n     * @param args\n     * @private\n     */\n    _addToQueue(args) {\n        let ack;\n        if (typeof args[args.length - 1] === \"function\") {\n            ack = args.pop();\n        }\n        const packet = {\n            id: this.ids++,\n            tryCount: 0,\n            pending: false,\n            args,\n            flags: Object.assign({ fromQueue: true }, this.flags),\n        };\n        args.push((err, ...responseArgs) => {\n            if (packet !== this._queue[0]) {\n                // the packet has already been acknowledged\n                return;\n            }\n            const hasError = err !== null;\n            if (hasError) {\n                if (packet.tryCount > this._opts.retries) {\n                    this._queue.shift();\n                    if (ack) {\n                        ack(err);\n                    }\n                }\n            }\n            else {\n                this._queue.shift();\n                if (ack) {\n                    ack(null, ...responseArgs);\n                }\n            }\n            packet.pending = false;\n            return this._drainQueue();\n        });\n        this._queue.push(packet);\n        this._drainQueue();\n    }\n    /**\n     * Send the first packet of the queue, and wait for an acknowledgement from the server.\n     * @private\n     */\n    _drainQueue() {\n        if (this._queue.length === 0) {\n            return;\n        }\n        const packet = this._queue[0];\n        if (packet.pending) {\n            return;\n        }\n        packet.pending = true;\n        packet.tryCount++;\n        const currentId = this.ids;\n        this.ids = packet.id; // the same id is reused for consecutive retries, in order to allow deduplication on the server side\n        this.flags = packet.flags;\n        this.emit.apply(this, packet.args);\n        this.ids = currentId; // restore offset\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this._sendConnectPacket(data);\n            });\n        }\n        else {\n            this._sendConnectPacket(this.auth);\n        }\n    }\n    /**\n     * Sends a CONNECT packet to initiate the Socket.IO session.\n     *\n     * @param data\n     * @private\n     */\n    _sendConnectPacket(data) {\n        this.packet({\n            type: PacketType.CONNECT,\n            data: this._pid\n                ? Object.assign({ pid: this._pid, offset: this._lastOffset }, data)\n                : data,\n        });\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    this.onconnect(packet.data.sid, packet.data.pid);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n        if (this._pid && args.length && typeof args[args.length - 1] === \"string\") {\n            this._lastOffset = args[args.length - 1];\n        }\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id, pid) {\n        this.id = id;\n        this.recovered = pid && this._pid === pid;\n        this._pid = pid; // defined only if connection state recovery is enabled\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = on(socket, \"error\", (err) => {\n            self.cleanup();\n            self._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the 'open' event\n            }\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                socket.close();\n                // @ts-ignore\n                socket.emit(\"error\", new Error(\"timeout\"));\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        if (this._autoConnect) {\n            socket.connect();\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n"],"names":["_arrayLikeToArray","arr","len","length","i","arr2","Array","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","isArray","F","s","n","done","value","e","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2","_defineProperty","obj","key","Object","defineProperty","enumerable","configurable","writable","_iterableToArray","iter","from","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties","_objectWithoutProperties","excluded","sourceSymbolKeys","indexOf","prototype","propertyIsEnumerable","_objectWithoutPropertiesLoose","sourceKeys","_toConsumableArray","arrayLikeToArray","iterableToArray","unsupportedIterableToArray","_toPropertyKey","arg","input","hint","prim","toPrimitive","undefined","res","String","Number","_typeof","constructor","_unsupportedIterableToArray","minLen","toString","slice","name","test","_classCallCheck","instance","Constructor","_defineProperties","props","descriptor","toPropertyKey","_createClass","protoProps","staticProps","_assertThisInitialized","self","ReferenceError","_setPrototypeOf","p","setPrototypeOf","bind","__proto__","_inherits","subClass","superClass","create","_getPrototypeOf","getPrototypeOf","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","valueOf","_createSuper","Derived","hasNativeReflectConstruct","result","Super","NewTarget","this","_get","get","property","receiver","base","hasOwnProperty","desc","_construct","Parent","args","Class","a","Function","_wrapNativeSuper","_cache","Map","fn","has","set","Wrapper","PACKET_TYPES","PACKET_TYPES_REVERSE","ERROR_PACKET","type","data","withNativeBlob","Blob","withNativeArrayBuffer","ArrayBuffer","encodeBlobAsBase64","callback","fileReader","FileReader","onload","content","split","readAsDataURL","supportsBinary","isView","buffer","chars","lookup","Uint8Array","charCodeAt","decodeBase64Packet","binaryType","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","arraybuffer","bytes","decode","mapBinary","encodedPacket","charAt","substring","SEPARATOR","fromCharCode","Emitter","mixin","on","addEventListener","event","_callbacks","once","off","removeListener","removeAllListeners","removeEventListener","cb","callbacks","splice","emit","emitReserved","listeners","hasListeners","globalThisShim","window","pick","attr","reduce","acc","k","NATIVE_SET_TIMEOUT","globalThis","NATIVE_CLEAR_TIMEOUT","installTimerFunctions","opts","useNativeTimers","setTimeoutFn","clearTimeoutFn","BASE64_OVERHEAD","prev","TransportError","reason","description","context","Error","Transport","query","socket","readyState","doOpen","doClose","onClose","packets","write","packet","decodePacket","onPacket","details","onPause","alphabet","map","seed","encode","num","encoded","Math","floor","yeast","now","Date","str","encodeURIComponent","XMLHttpRequest","hasCORS","XHR","xdomain","concat","join","empty","hasXHR2","responseType","Polling","polling","location","isSSL","protocol","port","xd","hostname","xs","secure","forceBase64","poll","pause","total","doPoll","encodedPayload","encodedPackets","decodedPacket","decodePayload","onOpen","close","count","encodePacket","encodePayload","doWrite","schema","timestampRequests","timestampParam","sid","b64","encodedQuery","path","assign","Request","uri","req","request","method","xhrStatus","onError","onData","pollXhr","async","xscheme","xhr","open","extraHeaders","setDisableHeaderCheck","setRequestHeader","withCredentials","requestTimeout","timeout","onreadystatechange","status","onLoad","send","document","index","requestsCount","requests","cleanup","fromError","abort","responseText","attachEvent","unloadHandler","nextTick","Promise","resolve","then","WebSocket","isReactNative","navigator","product","toLowerCase","WS","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","lastPacket","transports","websocket","re","parts","parse","src","b","replace","m","exec","host","authority","ipv6uri","pathNames","regx","names","queryKey","$0","$1","$2","Socket","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","addTrailingSlash","rejectUnauthorized","perMessageDeflate","threshold","transportOptions","closeOnBeforeunload","qs","qry","pairs","l","pair","decodeURIComponent","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","beforeunloadEventListener","transport","offlineEventListener","EIO","priorWebsocketSuccess","createTransport","shift","setTransport","onDrain","failed","onTransportOpen","msg","upgrading","flush","freezeTransport","error","onTransportClose","onupgrade","to","probe","onHandshake","JSON","resetPingTimeout","sendPacket","code","filterUpgrades","maxPayload","getWritablePackets","payloadSize","c","utf8Length","ceil","byteLength","size","options","compress","cleanupAndClose","waitForUpgrade","filteredUpgrades","j","withNativeFile","File","isBinary","hasBinary","toJSON","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","newData","reconstructPacket","_reconstructPacket","PacketType","Encoder","replacer","EVENT","ACK","encodeAsString","encodeAsBinary","BINARY_EVENT","BINARY_ACK","nsp","stringify","deconstruction","unshift","Decoder","reviver","reconstructor","isBinaryEvent","decodeString","BinaryReconstructor","takeBinaryData","start","buf","payload","tryParse","substr","isPayloadValid","finishedReconstruction","CONNECT","DISCONNECT","CONNECT_ERROR","reconPack","binData","RESERVED_EVENTS","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","recovered","receiveBuffer","sendBuffer","_queue","ids","acks","flags","auth","_opts","_autoConnect","subs","onpacket","subEvents","_readyState","retries","fromQueue","volatile","_addToQueue","ack","pop","_registerAckCallback","isTransportWritable","engine","notifyOutgoingListeners","_a","ackTimeout","timer","withErr","reject","arg1","arg2","tryCount","pending","responseArgs","_drainQueue","currentId","_packet","_sendConnectPacket","_pid","pid","offset","_lastOffset","onconnect","onevent","onack","ondisconnect","destroy","message","emitEvent","_anyListeners","sent","emitBuffered","subDestroy","listener","_anyOutgoingListeners","Backoff","ms","min","max","factor","jitter","attempts","duration","pow","rand","random","deviation","reset","setMin","setMax","setJitter","Manager","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","decoder","autoConnect","v","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","_reconnecting","reconnect","Engine","skipReconnect","openSubDestroy","errorSub","maybeReconnectOnOpen","clearTimeout","onping","ondata","ondecoded","add","active","_close","delay","onreconnect","attempt","cache","parsed","loc","href","url","sameNamespace","forceNew","multiplex"],"sourceRoot":""}