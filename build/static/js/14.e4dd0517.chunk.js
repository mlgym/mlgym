(()=>{"use strict";const e=Object.freeze({JOB_STATUS:"job_status",JOB_SCHEDULED:"job_scheduled",EVALUATION_RESULT:"evaluation_result",EXPERIMENT_CONFIG:"experiment_config",EXPERIMENT_STATUS:"experiment_status",UNKNOWN_EVENT:"Unknown event type. No event handler for such event type."});const t={},s={[e.JOB_STATUS]:(t,s)=>{o(function(e){const{grid_search_id:t,status:s,...o}=e;return{job_status:s,...o}}(t),s,e.JOB_STATUS)},[e.JOB_SCHEDULED]:(e,t)=>console.log("Job scheduled found"),[e.EVALUATION_RESULT]:(e,t)=>{const{experiment_id:s,charts_updates:n,table_scores:c}=function(e){const{experiment_id:t,epoch:s,metric_scores:o,loss_scores:n}=e,c=[],r={};for(const a of o)r[a.split+"_"+a.metric]=a.score,c.push({chart_id:a.split+"_"+a.metric,exp_id:t,epoch:s,score:a.score});for(const a of n)r[a.split+"_"+a.loss]=a.score,c.push({chart_id:a.split+"_"+a.loss,exp_id:t,epoch:s,score:a.score});return{experiment_id:t,charts_updates:c,table_scores:r}}(e);t.chartsUpdates.push(...n),o({experiment_id:s,...c},t)},[e.EXPERIMENT_CONFIG]:(e,t)=>console.log("Exp config found"),[e.EXPERIMENT_STATUS]:(t,s)=>{o(function(e){const{grid_search_id:t,status:s,splits:o,...n}=e;return{model_status:s,splits:o.join(),epoch_progress:n.current_epoch/n.num_epochs,batch_progress:n.current_batch/n.num_batches,...n}}(t),s,e.EXPERIMENT_STATUS)}};function o(e,s){var o,n;let c=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";Object.assign(null!==(n=s[o=e.experiment_id])&&void 0!==n?n:s[o]=e,e),c&&t[c]||(t[c]=!0,Object.keys(s[e.experiment_id]).forEach(s.headers.add,s.headers))}function n(e,t){for(const o of e){const e=o;if("batched_events"===e.event_id){n(e.data,t);continue}const{event_type:c,payload:r}=o;s[c](r,t)}}const c=e=>{const t={headers:new Set,chartsUpdates:[]};n(e,t),postMessage(function(e){let{headers:t,chartsUpdates:s,...o}=e;return{tableHeaders:t.size>0?[...t]:void 0,tableData:Object.values(o),chartsUpdates:s}}(t))},r=e=>{postMessage({status:{ping:e}})},a=e=>{postMessage({status:{throughput:e}})};let i;let _=-1,l=-1,d=0;const u=[],p=()=>{var e,t;i=setInterval(m,1e3),postMessage({status:{isSocketConnected:!0,gridSearchId:e,restApiUrl:t}})},h=e=>{u.push(e),u.length>=256&&T(),d++,postMessage({status:"msg_count_increment"})},g=()=>{l=(new Date).getTime(),r(l-_)},m=()=>{_=(new Date).getTime(),a(d/1),d=0,setTimeout(g,1e3*Math.random())},E=()=>{clearInterval(i),a(0),r(0)},T=()=>{console.log(u.length),c(u),u.length=0};onmessage=e=>{let{data:t}=e;var s;console.log(">>>>>>>> WebWorker with Dummy WebSocket ".concat(t)),s="/event_storage/2024-02-14--22-15-46/event_storage.log",console.log("/mlgym/build"+s),fetch("/mlgym/build"+s).then((e=>e.text())).then((e=>{const t=function*(){for(const t of e.split("\n"))yield t}();p(),function e(){const{value:s,done:o}=t.next();o?E():(setTimeout(e,100*Math.random()),h(JSON.parse(s)))}()})).catch((e=>console.error(e)))}})();
//# sourceMappingURL=14.e4dd0517.chunk.js.map